#!/bin/bash

date
export PS4=' $SECONDS + '
set -x -e

####################################
# obtain unique process id (pid) and make temp directory
####################################
export pid=$$
export DATA=${DATA:-$DATAROOT/${job}.${pid}}
mkdir -p $DATA
mkdir $DATA/INPUT
cd $DATA

############################
# Set up cycle varaible
############################
export cycle=t${cyc}z

####################################
# Specify NET and RUN Name and model
####################################
export NTASKS=${total_tasks:-16}
export NET=${NET:-gefs}
export RUN=${RUN:-gefs}
export COMPONENTwave=${COMPONENTwave:-${RUN}wave}
#export NTHREADS=1
export machine=${machine:-"WCOSS_DELL_P3"}

####################################
# File To Log Msgs
####################################
export jlogfile=${jlogfile:-${DATA}/jlogfile.${job}.${pid}}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

# Specify Execution Areas
export HOMEgefs=${HOMEgefs:-${NWROOT}/gefs.${gefs_ver}}
export EXECgefs=${EXECgefs:-$HOMEgefs/exec}
export USHgefs=${USHgefs:-$HOMEgefs/ush}
export FIXgefs=${FIXgefs:-$HOMEgefs/fix/fix_gefs}
export PARMgefs=${PARMgefs:-$HOMEgefs/parm}

export HOMEgfs=${HOMEgfs:-$HOMEgefs}
export EXECgfs=$HOMEgfs/exec
export USHgfs=$HOMEgfs/ush
export FIXgfs=$HOMEgfs/fix
export PARMgfs=$HOMEgfs/parm

# Path to HOME Directory
export HOMEwave=${HOMEwave:-${HOMEgfs}}
export EXECwave=${EXECwave:-$HOMEwave/exec}
export FIXwave=${FIXwave:-$HOMEgefs/fix/fix_wave}
export USHwave=${USHwave:-$HOMEgfs/ush}
export EXECcode=${EXECcode:-$HOMEgfs/exec}

##############################
# Run setpdy and initialize PDY variables
##############################
setpdy.sh
. PDY

# Set COM Paths and GETGES environment
export COMIN=$COMROOT/${NET}/${envir}/${RUN}.${PDY}/$cyc/wave
export COMOUT=$COMROOT/${NET}/${envir}/${RUN}.${PDY}/$cyc/wave

export CDUMP=$RUNMEM

#############################
# Source relevant config files
#############################
configs="gefs gefs_wave gefs_wave_prep"
config_path=${PARMgefs:-$NWROOT/gfs.${gfs_ver}/parm/config}
for config in $configs; do
    . $config_path/$config.parm
    status=$?
    [[ $status -ne 0 ]] && exit $status
done

##########################################
# Source machine runtime environment
##########################################
. $HOMEgfs/env/${machine}.env waveprep
status=$?
[[ $status -ne 0 ]] && exit $status

# Add default errchk = err_chk
export errchk=${errchk:-err_chk}

# Set resources to propagate NTASKS across cfp call
NTASKS=${NTASKS:-${npe_node_waveprep}}
export NTASKS=${NTASKS:?NTASKS required to be set}

# Create and go to DATA directory
export DATA=${DATA:-${DATAROOT:?}/${jobid}}
mkdir -p $DATA
cd $DATA

cyc=${cyc:-00}
export cycle=${cycle:-t${cyc}z}
 
# Set PDY
setpdy.sh
sh ./PDY

export pgmout=OUTPUT.$$

export MP_PULSE=0

[[ ! -d $COMOUT ]] && mkdir -m 775 -p $COMOUT

export COMIN_WAV_ICE=${COMIN_WAV_ICE:-$(compath.py gfs/prod)/${WAVICEPRFX}.${PDY}/${cyc}}

if [ $SENDCOM = YES ]; then
  mkdir -p $COMOUT
fi

export wavelog=${COMOUT}/wave.log

# Set mpi serial command
export wavempexec=${wavempexec:-"mpirun -n"}
export wave_mpmd=${wave_mpmd:-"cfp"}

# Set wave model ID tag to include member number 
# if ensemble; waveMEMB var empty in deterministic
export WAV_MOD_TAG=${COMPONENTwave}${waveMEMB}

#############################################################
# Execute the script
$HOMEwave/scripts/exwave_prep.sh
#############################################################
err=$?

if [ $err = 0 ]; then
    msg="$job completed normally!"
else
    msg="FATAL ERROR: $job failed!"
fi
postmsg "$jlogfile" "$msg"

##############################
# Remove the Temporary working directory
##############################
cd $DATAROOT
if [ ${KEEPDATA:-NO} = NO ] ; then rm -rf $DATA ; fi

echo "$(date) $0 $(date -u) end"

exit $err
